name: Test & Coverage
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run tests with coverage
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"
          SECRET_KEY: "django-insecure-test-key"
          DEBUG: "True"
        run: poetry run coverage run --source='.' manage.py test


      - name: Generate coverage report
        run: poetry run coverage xml

      - name: Upload coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.TEST_REPORTER_ID }}
        run: |
          ./cc-test-reporter after-build -t coverage.pyafter-build -t coverage.py